import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.*;

import org.json.*;

import javax.net.ssl.HttpsURLConnection;
public class Point{
	Double longitude, latitude;
	
	public Point(double one, double two){
		latitude = one;
		longitude = two;
	}
	
	public double getLatitude(){
		return latitude;
	}
	
	public double getLongitude(){
		return longitude;
	}
	
    public String toString()  {
        String url = "http://maps.googleapis.com/maps/api/geocode/json?latlng=" + latitude + "," + longitude + "&sensor=true";
        
        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();
        
        // optional default is GET
        con.setRequestMethod("GET");
        
        //add request header
        con.setRequestProperty("User-Agent", "Mozilla/5.0");
        
        int responseCode = con.getResponseCode();
        System.out.println("\nSending 'GET' request to URL : " + url);
        System.out.println(url);
        System.out.println("Response Code : " + responseCode);
        
        BufferedReader in = new BufferedReader(
                                               new InputStreamReader(con.getInputStream()));
        String inputLine;
        StringBuffer response = new StringBuffer();
        
        while ((inputLine = in.readLine()) != null) {
            response.append(inputLine);
        }
        in.close();
        
        //print result
        //System.out.println(response.toString());
        
        String responseStr = response.toString();
        JSONObject json = new JSONObject(responseStr).getJSONArray("results").getJSONObject(0);
        String toReturn = json.getString("formatted_address");
        return toReturn;
    }

	public double getDistance(Point p){
		double lat = p.getLatitude() - this.getLatitude();
		double longitude = p.getLongitude() - this.getLongitude();
		double squ = Math.pow(longitude*longitude + lat*lat, .5);
		return squ;
	}
    
    public boolean isWithin(Point other) {
        double radius = 0.0;    //this is changed when we decide how far/close two points need to be
        if(getDistance(other) < radius) return true;
        return false;
    }
}
